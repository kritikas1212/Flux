{% comment %}
  Adaptive AI-Powered Product Recommendations
  Intelligently displays related or complementary products
{% endcomment %}

<section class="section-spacing bg-gradient-to-b from-primary to-secondary" data-section-id="{{ section.id }}" data-section-type="product-recommendations">
  <div class="container-flux">
    
    {%- if section.settings.heading != blank -%}
      <div class="text-center mb-12 md:mb-16 animate-fade-in-up">
        <h2 class="mb-4">
          <span class="bg-flux-gradient bg-clip-text text-transparent">
            {{ section.settings.heading }}
          </span>
        </h2>
        
        {%- if section.settings.subheading != blank -%}
          <p class="text-muted text-lg max-w-2xl mx-auto">
            {{ section.settings.subheading }}
          </p>
        {%- endif -%}
      </div>
    {%- endif -%}

    <div 
      class="product-recommendations"
      data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}"
    >
      {%- if recommendations.performed and recommendations.products_count > 0 -%}
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-{{ section.settings.products_per_row }} gap-6 md:gap-8">
          {%- for product in recommendations.products limit: section.settings.products_to_show -%}
            <div class="animate-slide-up" style="animation-delay: {{ forloop.index | times: 100 }}ms;">
              {%- render 'product-card', product: product, show_vendor: section.settings.show_vendor -%}
            </div>
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const container = document.querySelector('.product-recommendations');
    if (!container) return;
    
    const url = container.dataset.url;
    
    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');
        
        if (recommendations && recommendations.innerHTML.trim().length > 0) {
          container.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(error => {
        console.error('Error loading product recommendations:', error);
      });
  });
</script>

{% schema %}
{
  "name": "Product Recommendations",
  "tag": "section",
  "class": "product-recommendations-section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You May Also Like"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Subheading",
      "default": "Curated products based on your selection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "label": "Products to show",
      "default": 4
    },
    {
      "type": "range",
      "id": "products_per_row",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Products per row",
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    }
  ]
}
{% endschema %}

